{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-10-26T14:21:28.822Z",
    "end": "2021-10-26T14:24:01.570Z",
    "duration": 152748,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fcdede9b-e522-4fc9-99a3-88601ee65c6b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e18d8217-1e91-4fee-9459-8dbe44af1bc4",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "e3980580-9a14-4679-8dc4-5c0d9c2e7d24",
              "parentUUID": "e18d8217-1e91-4fee-9459-8dbe44af1bc4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3980580-9a14-4679-8dc4-5c0d9c2e7d24"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "2961aebe-3a38-4481-8e0c-b90322fbafc0",
              "parentUUID": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "c98bc2f7-a82b-4713-818f-510da0e09f69",
              "parentUUID": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 1280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "85415a0a-dd57-45cb-bc2a-af724869ce40",
              "parentUUID": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 809,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "46fff7f9-a85f-4f07-9af2-d051b1ad7580",
              "parentUUID": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "308450a9-3818-4a54-b15e-f27f95e6ae74",
              "parentUUID": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "1d1ee320-cf3d-4a1d-be30-09dac71de278",
              "parentUUID": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "8887e34e-84f2-4175-97a0-44c66f0c8234",
              "parentUUID": "e07ae1b3-43b4-4021-8eab-3036d0ce5ee6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2961aebe-3a38-4481-8e0c-b90322fbafc0",
            "c98bc2f7-a82b-4713-818f-510da0e09f69",
            "85415a0a-dd57-45cb-bc2a-af724869ce40",
            "46fff7f9-a85f-4f07-9af2-d051b1ad7580",
            "308450a9-3818-4a54-b15e-f27f95e6ae74",
            "1d1ee320-cf3d-4a1d-be30-09dac71de278",
            "8887e34e-84f2-4175-97a0-44c66f0c8234"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cba78d2d-63f6-42b9-95fa-1e1a0c621ab8",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f18ba10e-9efe-4284-b1c5-1f3e90033968",
              "parentUUID": "cba78d2d-63f6-42b9-95fa-1e1a0c621ab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "3f5962eb-a51d-4a97-9acc-fc2aa0316412",
              "parentUUID": "cba78d2d-63f6-42b9-95fa-1e1a0c621ab8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f18ba10e-9efe-4284-b1c5-1f3e90033968",
            "3f5962eb-a51d-4a97-9acc-fc2aa0316412"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "378bc09a-0557-4f67-a62f-6e1dcf825ca0",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "45d26428-225d-4ed3-acd2-05114568444e",
              "parentUUID": "378bc09a-0557-4f67-a62f-6e1dcf825ca0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2113b692-2c69-4644-9c1b-a7d4f67131bb",
              "parentUUID": "378bc09a-0557-4f67-a62f-6e1dcf825ca0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "d8889bb6-68eb-4f1d-ae6e-c753fe9d4fff",
              "parentUUID": "378bc09a-0557-4f67-a62f-6e1dcf825ca0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2bdd05d0-b6e5-4aee-8562-bea73696c9c7",
              "parentUUID": "378bc09a-0557-4f67-a62f-6e1dcf825ca0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45d26428-225d-4ed3-acd2-05114568444e",
            "2113b692-2c69-4644-9c1b-a7d4f67131bb",
            "d8889bb6-68eb-4f1d-ae6e-c753fe9d4fff",
            "2bdd05d0-b6e5-4aee-8562-bea73696c9c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8bbc02b4-46b3-4adb-8a0e-668e1b601f4a",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 2003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e27dcb37-8b62-4041-862c-cccfba1f6ff5",
              "parentUUID": "8bbc02b4-46b3-4adb-8a0e-668e1b601f4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "e730f62f-f924-4c35-a411-4695a7840452",
              "parentUUID": "8bbc02b4-46b3-4adb-8a0e-668e1b601f4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e27dcb37-8b62-4041-862c-cccfba1f6ff5",
            "e730f62f-f924-4c35-a411-4695a7840452"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e40f989-decc-425e-bec4-35c5623b414d",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3452f227-0c7b-4c89-a058-69a065d5ffaf",
              "parentUUID": "2e40f989-decc-425e-bec4-35c5623b414d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e0de8d18-0afd-415e-8e9c-904e19f9de6b",
              "parentUUID": "2e40f989-decc-425e-bec4-35c5623b414d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3452f227-0c7b-4c89-a058-69a065d5ffaf",
            "e0de8d18-0afd-415e-8e9c-904e19f9de6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1acac016-af65-4721-9e4d-12f12e8b509e",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1552,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "3526c9f0-54bf-4353-8188-b6050f7edcac",
              "parentUUID": "1acac016-af65-4721-9e4d-12f12e8b509e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 13102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "c2794bd1-d6cc-466e-b44e-b74b87c97fb0",
              "parentUUID": "1acac016-af65-4721-9e4d-12f12e8b509e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3526c9f0-54bf-4353-8188-b6050f7edcac",
            "c2794bd1-d6cc-466e-b44e-b74b87c97fb0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14654,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bb743a26-91cd-4654-aabc-4089610bfd9c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 6262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "9bab547e-7966-4a37-a0a8-9fcc08794811",
              "parentUUID": "bb743a26-91cd-4654-aabc-4089610bfd9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 15019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "34627e7e-7543-4159-9ae1-5d2ef974c8a6",
              "parentUUID": "bb743a26-91cd-4654-aabc-4089610bfd9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 9622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "bfe3164c-2909-4f5c-8efb-c35bb3a5920b",
              "parentUUID": "bb743a26-91cd-4654-aabc-4089610bfd9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bab547e-7966-4a37-a0a8-9fcc08794811",
            "34627e7e-7543-4159-9ae1-5d2ef974c8a6",
            "bfe3164c-2909-4f5c-8efb-c35bb3a5920b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b9eb848f-c826-4793-b721-40cab57b848b",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "ae2839ae-1516-4a60-8b26-53fd1488f2c9",
              "parentUUID": "b9eb848f-c826-4793-b721-40cab57b848b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a680f36f-3f9a-4344-9f5e-b55642eb4adf",
              "parentUUID": "b9eb848f-c826-4793-b721-40cab57b848b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "3b54a18a-7bc1-4f34-8e43-5f9cf2a58dd0",
              "parentUUID": "b9eb848f-c826-4793-b721-40cab57b848b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 5120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "df959699-63a5-4213-8390-a15d72da3529",
              "parentUUID": "b9eb848f-c826-4793-b721-40cab57b848b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae2839ae-1516-4a60-8b26-53fd1488f2c9",
            "a680f36f-3f9a-4344-9f5e-b55642eb4adf",
            "3b54a18a-7bc1-4f34-8e43-5f9cf2a58dd0",
            "df959699-63a5-4213-8390-a15d72da3529"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "33881634-fc32-451f-9321-2b78043ace34",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5853,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "202bd420-f50d-4c1a-bf17-532efffee025",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5924,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9db502ad-1dd3-4fa7-9da1-b2c0a7f48261",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5715,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "de98fadf-dfc7-479d-9a32-c560ec71f3b0",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5641,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a49a9132-1a3a-4852-9250-b6f82a27636f",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5698,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d7458b80-d847-4114-8dfd-0662c17871bf",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e8ae9bcd-0a9f-48b6-83bb-bc9fb16e95be",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 6076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "85816cca-90b6-453c-a17b-85cb633e23b1",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 6618,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b6d419e2-f399-4c0b-ae86-14d0dd0da3b9",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 8030,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4d078f25-5844-4d82-a175-68d0caa302ed",
              "parentUUID": "33881634-fc32-451f-9321-2b78043ace34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "202bd420-f50d-4c1a-bf17-532efffee025",
            "9db502ad-1dd3-4fa7-9da1-b2c0a7f48261",
            "de98fadf-dfc7-479d-9a32-c560ec71f3b0",
            "a49a9132-1a3a-4852-9250-b6f82a27636f",
            "d7458b80-d847-4114-8dfd-0662c17871bf",
            "e8ae9bcd-0a9f-48b6-83bb-bc9fb16e95be",
            "85816cca-90b6-453c-a17b-85cb633e23b1",
            "b6d419e2-f399-4c0b-ae86-14d0dd0da3b9",
            "4d078f25-5844-4d82-a175-68d0caa302ed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 55137,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "96c90966-7177-4f1d-8573-6cbc78d0c78a",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 7170,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "85260e88-46c2-48e3-bdea-5c8a1a9aee68",
              "parentUUID": "96c90966-7177-4f1d-8573-6cbc78d0c78a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5806,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2f406501-a3b1-4d59-8b99-759b10386a70",
              "parentUUID": "96c90966-7177-4f1d-8573-6cbc78d0c78a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5890,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59029/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59029/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59029/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59029/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59029/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59029/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "97d25789-a50b-402d-b0ff-3bfd68cfb8c7",
              "parentUUID": "96c90966-7177-4f1d-8573-6cbc78d0c78a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "85260e88-46c2-48e3-bdea-5c8a1a9aee68",
            "2f406501-a3b1-4d59-8b99-759b10386a70",
            "97d25789-a50b-402d-b0ff-3bfd68cfb8c7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18866,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d26b1c13-01ed-4a05-b352-59941fc93c61",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 2155,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59029/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59029/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59029/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59029/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59029/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59029/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59029/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b2fd95e5-48fd-4393-912b-e7dc406bae47",
              "parentUUID": "d26b1c13-01ed-4a05-b352-59941fc93c61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 2142,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59029/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59029/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59029/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59029/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59029/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59029/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59029/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59029/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59029/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59029/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59029/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59029/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0bd17748-e769-46f9-851f-22a98e595009",
              "parentUUID": "d26b1c13-01ed-4a05-b352-59941fc93c61",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b2fd95e5-48fd-4393-912b-e7dc406bae47",
            "0bd17748-e769-46f9-851f-22a98e595009"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}